config:
  ############################################################################
  # AWS Access Settings
  ############################################################################

  # If you have an AWS profile defined, you can configure it here instead of using an environment variable.
  aws:profile: myProfile
  # Your AWS region can be configured here instead of using an environment variable.
  aws:region: us-east-1

  ############################################################################
  # VPC Settings
  ############################################################################

  # An optional array of availability zone ids to create subnets for can be
  # specified here. The default value is all the availability zones associated
  # with a region.
  vpc:azs:
    - us-west-1a
    - us-west-1b

  ############################################################################
  # AWS Elastic Kubernetes Service (EKS) Settings
  ############################################################################

  # This is the Kubernetes version to install using EKS. Changing this value may result in bugs in the behavior
  # of the reference architecture because it is designed around the APIs for 1.19.
  eks:k8s_version: 1.19
  # This is the default instance type used by EKS.
  eks:instance_type: t2.large
  # The minimum number of compute instances to provision for the EKS cluster.
  eks:min_size: 3
  # The maximum size of the EKS cluster.
  eks:max_size: 12
  # The desired capacity of the EKS cluster.
  eks:desired_capacity: 3

  ############################################################################
  # NGINX Kubernetes Ingress Controller (KIC) Settings
  ############################################################################

  # The following settings (kic-helm:*) define the properties of the helm chart
  # used to deploy the ingress controller. Note, the version specified here is
  # different from the version of the ingress controller itself. Rather, this
  # is the version of the helm chart which describes *how* to deploy the ingress
  # controller.

  # NGINX Kubernetes Ingress Controller (KIC) Configuration
  kic-helm:chart_name: nginx-ingress
  # Chart name for the helm chart for kic
  kic-helm:chart_version: 0.10.1
  # Chart version for the helm chart for kic
  kic-helm:helm_repo_name: nginx-stable
  # Name of the repo to pull the kic chart from
  kic-helm:helm_repo_url: https://helm.nginx.com/stable
  # URL of the chart repo to pull kic from

  # Acceptable values are default value is (oss_image):
  # source    - build the KIC image from source code
  # registry  - download and use an NGINX Ingress Controller container image from a public registry
  kic:image_origin: registry

  # Full repository and tag path for ingress controller image
  # For example, if you have a subscription to NGINX Plus Ingress Controller
  # and have configured the Docker client certificates such that you can
  # access the NGINX Docker registry, you can specify the NGINX Plus
  # image name here. See this page for configuration documentation:
  # https://docs.nginx.com/nginx-ingress-controller/installation/pulling-ingress-controller-image/
  #
  # The following are all valid image names:
  # kic:image_name: private-registry.nginx.com/nginx-ic/nginx-plus-ingress:1.12.1
  # kic:image_name: private-registry.nginx.com/nginx-ic/nginx-plus-ingress:1.12.1-ot
  # kic:image_name: docker.io/nginx/nginx-ingress:1.12.1
  # kic:image_name: nginx/nginx-ingress:1.12.1
  # kic:image_name: nginx/nginx-ingress:1.12.1-alpine
  kic:image_name: nginx/nginx-ingress:1.12.1


  ############################################################################
  # Options for building from oss_image
  ############################################################################

  ############################################################################
  # Options for building from source
  ############################################################################

  # This parameter informs the image creation build script what type of
  # Docker image to build. You will need to check the source code to know
  # exactly what targets are available. As of 1.11.2, the following make
  # targets are available:
  #   debian-image (default)
  #   alpine-image
  #   debian-image-plus
  #   debian-image-nap-plus
  #   openshift-image
  #   openshift-image-plus
  #   openshift-image-nap-plus
  #   debian-image-opentracing
  #   debian-image-opentracing-plus
  kic:make_target: debian-image

  # By default the latest version of the NGINX Kubernetes Ingress Controller
  # source code will be downloaded and built unless an alternative URL is
  # provided for the kic_src_url parameter. To use the default, just omit this key.
  # URLs can point to a directory path on the local filesystem, tar.gz archive, or to a
  # git repository. Specify a tag/commit/branch for a git repository URL in the fragment.
  #
  # Example URLs:
  #
  # HTTP/HTTPS url pointing to a tar.gz archive:
  # https://github.com/nginxinc/kubernetes-ingress/archive/refs/tags/v1.11.3.tar.gz
  #
  # tar.gz archive on the local filesystem:
  # file:///var/tmp/v1.11.3.tar.gz
  # /var/tmp/v1.11.3.tar.gz
  #
  # Directory containing the source tree on the local filesystem:
  # file:///var/tmp/kubernetes-ingress-1.11.3
  # /var/tmp/kubernetes-ingress-1.11.3
  #
  # Github URL without a tag specified:
  # https://github.com/nginxinc/kubernetes-ingress.git
  # git@github.com:nginxinc/kubernetes-ingress.git
  # ssh://git@github.com:nginxinc/kubernetes-ingress.git
  #
  # Github URL with a tag specified:
  # https://github.com/nginxinc/kubernetes-ingress.git#v1.12.0
  # git@github.com:nginxinc/kubernetes-ingress.git#v1.12.0
  # ssh://git@github.com:nginxinc/kubernetes-ingress.git#v1.12.0
  kic:src_url: https://github.com/nginxinc/kubernetes-ingress.git#v1.12.0

  # When set to true, Pulumi's diff logic is circumvented and the image will always be
  # rebuilt regardless of the input variables to Pulumi being the same or not.
  kic:always_rebuild: false
  # When the block below is defined and the make_target is set to an NGINX plus image,
  # NGINX Plus will be built.
  kic:nginx_plus:
    # Path on the executing system's filesystem of the NGINX repository key.
    kic:key_path: /etc/ssl/nginx/nginx-repo.key
    # Path on the executing system's filesystem of the NGINX repository certificate.
    kic:cert_path: /etc/ssl/nginx/nginx-repo.crt

  ############################################################################

  # Logagent Configuration
  logagent:chart_name: filebeat
  # Chart name for the helm chart for the logagent
  logagent:chart_version: 7.13.2
  # Chart version for the helm chart for the logagent
  logagent:helm_repo_name: elastic
  # Name of the repo to pull the logagent from
  logagent:helm_repo_url: https://helm.elastic.co
  # URL of the chart repo to pull the logagent from

  ############################################################################

  # Logstore Configuration
  logstore:chart_name: elasticsearch
  # Chart name for the helm chart for the logstore
  logstore:chart_version: 15.9.0
  # Chart version for the helm chart for the logstore
  logstore:helm_repo_name: bitnami
  # Name of the repo to pull the logstore from
  logstore:helm_repo_url: https://charts.bitnami.com/bitnami

  ############################################################################

  # Cert Manager Configuration
  certmgr:chart_name: cert-manager
  # Chart hame for the helm chart for certmanager
  certmgr:chart_version: v1.4.0
  # Chart version for the helm chart for certmanager
  certmgr:certmgr_helm_repo_name: jetstack
  # Name of the repo to pull the certmanager chart from
  certmgr:certmgr_helm_repo_url: https://charts.jetstack.io
  # URL of the chart repo to pull certmanager from

  ############################################################################

  # Grafana Configuration
  grafana:chart_name: grafana
  # Chart name for the helm chart for grafana
  grafana:chart_version: 6.13.7
  # Chart version for the helm chart for grafana
  grafana:helm_repo_name: grafana
  # Name of the repo to pull the grafana chart from
  grafana:helm_repo_url: https://grafana.github.io/helm-charts
  # URL of the chart repo to pull grafana from
  grafana:adminuser: admin
  # The username for the grafana installation
  grafana:adminpass: strongpass
  # The password for the grafana installation; note that this is not exposed to the internet
  # and requires kubeproxy to access. However, this should be encrypted which is dependent on
  # Pulumi addressing hierarchical config files (for the ideal solution). See the anthos subdir
  # for details.

  ############################################################################

  # Prometheus Configuration
  prometheus:chart_name: prometheus
  # Chart name for the helm chart for prometheus
  prometheus:chart_version: 14.6.0
  # Chart version for the helm chart for prometheus
  prometheus:helm_repo_name: prometheus-community
  # Name of the repo to pull the prometheus chart from
  prometheus:helm_repo_url: https://https://prometheus-community.github.io/helm-charts

  ############################################################################

  # The parameters for the Bank of Sirius are set in a configuration directory
  # within that project.